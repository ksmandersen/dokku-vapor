#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

APP="$1"; IMAGE="dokku/$APP"

echo "-----> Injecting vapor dependencies ..."

DIR=/app

COMMAND=$(cat <<EOF
export DEBIAN_FRONTEND=noninteractive
if [ -f $DIR/.vapor-dependencies ]; then
    apt-get update
    apt-get install -y wget software-properties-common python-software-properties apt-transport-https
    wget https://repo.vapor.codes/apt/keyring.gpg -O- | apt-key add -
    echo "deb https://repo.vapor.codes/apt xenial main" | tee /etc/apt/sources.list.d/vapor.list
    apt-get update
    PACKAGES=\$(cat "$DIR/.vapor-dependencies" | tr "\\n" " ")
    apt-get install -y \$PACKAGES
fi
if [ -f $DIR/.vapor-apns ]; then
   apt-get install -y  g++ make binutils autoconf automake autotools-dev libtool pkg-config \
  zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev \
  libc-ares-dev libjemalloc-dev libsystemd-dev libspdylay-dev \
  cython python3-dev python-setuptools build-essential
   wget https://github.com/nghttp2/nghttp2/releases/download/v1.26.0/nghttp2-1.26.0.tar.bz2
   cd nghttp2-1.26.0
   ./configure
   make
   make install
   cd ..
   wget https://curl.haxx.se/download/curl-7.54.0.tar.bz2
   tar -xvjf curl-7.54.0.tar.bz2
   cd curl-7.54.0
   ./configure --with-nghttp2 --prefix=/usr/local
   make
   make install
   ldconfig
fi
sleep 1
EOF
)

id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null

