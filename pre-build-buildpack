#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

APP="$1"; IMAGE="dokku/$APP"

echo "-----> Injecting vapor dependencies ..."

DIR=/app

COMMAND=$(cat <<EOF
export DEBIAN_FRONTEND=noninteractive
if [ -f $DIR/.vapor-dependencies ]; then
    apt-get update
    apt-get install -y wget software-properties-common python-software-properties apt-transport-https
    wget https://repo.vapor.codes/apt/keyring.gpg -O- | apt-key add -
    echo "deb https://repo.vapor.codes/apt xenial main" | tee /etc/apt/sources.list.d/vapor.list
    apt-get update
    PACKAGES=\$(cat "$DIR/.vapor-dependencies" | tr "\\n" " ")
    apt-get install -y \$PACKAGES
fi
if [ -f "$DIR/.vapor-apns" ]; then
   apt-get update
   apt-get install -y build-essential curl
   apt-get -y install git g++ make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev libjemalloc-dev cython python3-dev python-setuptools
   git clone https://github.com/tatsuhiro-t/nghttp2.git
   cd nghttp2
   autoreconf -i
   automake
   autoconf
   ./configure
   make
   make install
   cd ..
   wget http://curl.haxx.se/download/curl-7.56.0.tar.bz2
   tar -xvjf curl-7.56.0.tar.bz2
   cd curl-7.56.0
   ./configure --with-nghttp2=/usr/local --with-ssl
   make
   make install
   ldconfig
   apt-get remove curl
   ln -fs /usr/local/bin/curl /usr/bin/curl
   cd ..
   rm -rf nghttp2
   rm -rf curl-7.56.0
fi
sleep 1
EOF
)

id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null

